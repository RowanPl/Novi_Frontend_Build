{
  "openapi": "3.0.3",
  "info": {
    "title": "NOVI Educational Backend",
    "version": "0.0.1",
    "description":

    "**Deze backend is gebouwd door en voor NOVI en mag alleen worden gebruikt voor opleidingsdoeleinden. Bij het volgen van de leerlijn Frontend is het noodzakelijk dat er gebruik gemaakt wordt van een backend voor gebruikersbeheer. Hiervoor maak je éénmalig een eigen omgeving aan binnen de NOVI backend via [dit](https://novi.datavortex.nl/Create) formulier.**\n \n Deze backend ondersteunt het registreren, inloggen en het aanpassen van gebruikers. Ook kan je één veld met aanvullende informatie opslaan, zoals een array met bekeken films of gelikte recepten. Het is niet mogelijk om daarnaast nog meer losse informatie op te slaan. Tenslotte wordt het uploaden en downloaden van de volgende bestandstypes ondersteund:\n\n\n - JPG/JPEG\n - PNG\n - GIF\n - PDF\n \n   Let op: de database met gebruikers wordt iedere drie maanden geleegd.\n\n Eigen omgeving opzetten\n\n Je zet eenmalig een eigen omgeving op binnen de backendserver door je aan te melden via dit formulier. Kies hiervoor een naam die beschrijvend is en aansluit bij de naam van jouw frontend applicatie. Vervolgens bevestig je het aanmaken van de omgeving via de bevestigingsmail die wordt verzonden naar jouw @novi-education e-mailadres.\n\n Endpoints \n\n Alle endpoints zijn beschikbaar op de volgende basis-URI: `https://api.datavortex.nl/{applicationName}`. Hierbij vervang je `{applicationName]` voor de naam van jouw gekozen serveromgeving. Alle endpoints en vereiste gegevens zijn hieronder gedocumenteerd. Wanneer je ook voorbeeldresponses wil bekijken zul je..."
  },
  "servers": [
    {
      "url": "https://api.datavortex.nl/testapp"
    },
    {
      "url": ""
    }
  ],
  "tags": [
    {
      "name": "Application",
      "description": "Opperations to manage the application"
    },
    {
      "name": "Users",
      "description": "Operations related to user management"
    },
    {
      "name": "Photos",
      "description": "Operations related to photo upload and retrieval"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "X-Api-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Api-Key",
        "description": "De key is: testapp:jy6fdHpph44ajMCTfHpZ"
      }
    }
  },
  "paths": {
    "/info": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Get application information",
        "operationId": "getApplicationInfo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Application information: "
          }
        }
      },
      "put": {
        "tags": [
          "Application"
        ],
        "summary": "Update application information",
        "operationId": "updateApplicationInfo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "info": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application information updated successfully",
            "x-code-samples": {
              "application/json": {
                "value": {
                  "message": "Application information updated successfully"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "operationId": "createUser",
        "security": [
          {
            "X-Api-Key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "email": {
                    "type": "string",
                    "example": "testuser@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "testpassword"
                  },
                  "info": {
                    "type": "string",
                    "example": "testinfo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user  by username",
        "operationId": "getUserByUsername",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
                "example": "testuser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user information by username",
        "operationId": "updateUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "info": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully"
          }
        }
      }
    },
    "/users/{username}/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user information by username",
        "operationId": "getUserInfoByUsername",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
                "example": "testuser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully"
          }
        }
      }
    },
    "/users/authenticate": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Authenticate and get JWT token",
        "operationId": "authenticateUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "testpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token received"
          }
        }
      }
    },
    "/users/{username}/upload": {
      "post": {
        "tags": [
          "Photos"
        ],
        "summary": "Upload a photo for a user",
        "operationId": "uploadPhotoByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "jpeg/png"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo uploaded successfully"
          }
        }
      }
    },
    "/users/{username}/download": {
      "get": {
        "tags": [
          "Photos"
        ],
        "summary": "Download a user's photo",
        "operationId": "downloadPhotoByUsername",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "testuser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Photo downloaded successfully"
          }
        }
      }
    }
  }
}


